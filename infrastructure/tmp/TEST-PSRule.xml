<?xml version="1.0" encoding="utf-8" standalone="no"?><test-results xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="PSRule" total="27" errors="0" failures="5" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2025-02-27" time="00:00:00.0380000" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><environment user="MaythamFahmi" machine-name="FMDK-PF4F3JFX" cwd="C:\Workspace\Clients\FellowMind\demo\infrastructure" user-domain="AzureAD" platform="Win32NT" nunit-version="2.5.8.0" os-version="10.0.26100.0" clr-version="9.0.1" /><culture-info current-culture="en-DK" current-uiculture="en-US" /><test-suite type="TestFixture" name="C:\Workspace\Clients\FellowMind\demo\infrastructure\infra\main.dev.bicepparam" executed="True" result="Success" success="True" time="0,017" asserts="0" description=""><results><test-case description="Outputting a sensitive value from deployment may leak secrets into deployment history or logs." name="C:\Workspace\Clients\FellowMind\demo\infrastructure\infra\main.dev.bicepparam -- Azure.Deployment.OutputSecretValue" time="0" asserts="0" success="True" result="Success" executed="True" /><test-case description="A sensitive property set from deterministic or hardcoded values is not secure." name="C:\Workspace\Clients\FellowMind\demo\infrastructure\infra\main.dev.bicepparam -- Azure.Deployment.AdminUsername" time="0,01" asserts="0" success="True" result="Success" executed="True" /><test-case description="Sensitive parameters that have been not been marked as secure may leak the secret into deployment history or logs." name="C:\Workspace\Clients\FellowMind\demo\infrastructure\infra\main.dev.bicepparam -- Azure.Deployment.SecureParameter" time="0,001" asserts="0" success="True" result="Success" executed="True" /><test-case description="A secret property set from a non-secure value may leak the secret into deployment history or logs." name="C:\Workspace\Clients\FellowMind\demo\infrastructure\infra\main.dev.bicepparam -- Azure.Deployment.SecureValue" time="0,006" asserts="0" success="True" result="Success" executed="True" /><test-case description="Set the parameter value to a value that matches the specified strong type." name="C:\Workspace\Clients\FellowMind\demo\infrastructure\infra\main.dev.bicepparam -- Azure.Template.ParameterStrongType" time="0" asserts="0" success="True" result="Success" executed="True" /><test-case description="Template expressions should not exceed the maximum length." name="C:\Workspace\Clients\FellowMind\demo\infrastructure\infra\main.dev.bicepparam -- Azure.Template.ExpressionLength" time="0" asserts="0" success="True" result="Success" executed="True" /></results></test-suite><test-suite type="TestFixture" name="rg-demo-ps-rule-dev" executed="True" result="Success" success="True" time="0,01" asserts="0" description=""><results><test-case description="Azure resources should be tagged using a standard convention." name="rg-demo-ps-rule-dev -- Azure.Resource.UseTags" time="0,003" asserts="0" success="True" result="Success" executed="True" /><test-case description="Resources should be deployed to allowed regions." name="rg-demo-ps-rule-dev -- Azure.Resource.AllowedRegions" time="0,006" asserts="0" success="True" result="Success" executed="True" /><test-case description="Resource Group names should meet naming requirements." name="rg-demo-ps-rule-dev -- Azure.ResourceGroup.Name" time="0,001" asserts="0" success="True" result="Success" executed="True" /><test-case description="Use RBAC assignments on resource groups instead of individual resources." name="rg-demo-ps-rule-dev -- Azure.RBAC.UseRGDelegation" time="0" asserts="0" success="True" result="Success" executed="True" /></results></test-suite><test-suite type="TestFixture" name="storage-raw-deployment" executed="True" result="Success" success="True" time="0,004" asserts="0" description=""><results><test-case description="Outputting a sensitive value from deployment may leak secrets into deployment history or logs." name="storage-raw-deployment -- Azure.Deployment.OutputSecretValue" time="0" asserts="0" success="True" result="Success" executed="True" /><test-case description="A sensitive property set from deterministic or hardcoded values is not secure." name="storage-raw-deployment -- Azure.Deployment.AdminUsername" time="0,002" asserts="0" success="True" result="Success" executed="True" /><test-case description="Sensitive parameters that have been not been marked as secure may leak the secret into deployment history or logs." name="storage-raw-deployment -- Azure.Deployment.SecureParameter" time="0,001" asserts="0" success="True" result="Success" executed="True" /><test-case description="A secret property set from a non-secure value may leak the secret into deployment history or logs." name="storage-raw-deployment -- Azure.Deployment.SecureValue" time="0,001" asserts="0" success="True" result="Success" executed="True" /><test-case description="Set the parameter value to a value that matches the specified strong type." name="storage-raw-deployment -- Azure.Template.ParameterStrongType" time="0" asserts="0" success="True" result="Success" executed="True" /><test-case description="Template expressions should not exceed the maximum length." name="storage-raw-deployment -- Azure.Template.ExpressionLength" time="0" asserts="0" success="True" result="Success" executed="True" /><test-case description="Nested deployments should meet naming requirements of deployments." name="storage-raw-deployment -- Azure.Deployment.Name" time="0" asserts="0" success="True" result="Success" executed="True" /></results></test-suite><test-suite type="TestFixture" name="sademopsrulerawdev" executed="True" result="Failure" success="False" time="0,007" asserts="5" description=""><results><test-case description="Azure resources should be tagged using a standard convention." name="sademopsrulerawdev -- Azure.Resource.UseTags" time="0" asserts="0" success="False" result="Failure" executed="True"><failure><message><![CDATA[Consider tagging resources using a standard convention. Identify mandatory and optional tags then tag all resources and resource groups using this standard.
Also consider using Azure Policy to enforce mandatory tags.

The following reasons were reported:

- The resource is not tagged.
- Path tags: Does not exist.
]]></message><stack-trace><![CDATA[]]></stack-trace></failure></test-case><test-case description="Resources should be deployed to allowed regions." name="sademopsrulerawdev -- Azure.Resource.AllowedRegions" time="0,001" asserts="0" success="True" result="Success" executed="True" /><test-case description="Enable blob soft delete on Storage Accounts." name="sademopsrulerawdev -- Azure.Storage.SoftDelete" time="0,001" asserts="0" success="False" result="Failure" executed="True"><failure><message><![CDATA[Consider enabling soft delete on storage accounts to protect blobs from accidental deletion or modification.

The following reasons were reported:

- A sub-resource of type 'Microsoft.Storage/storageAccounts/blobServices' has not been specified.
]]></message><stack-trace><![CDATA[]]></stack-trace></failure></test-case><test-case description="Use containers configured with a private access type that requires authorization." name="sademopsrulerawdev -- Azure.Storage.BlobAccessType" time="0,003" asserts="0" success="True" result="Success" executed="True" /><test-case description="Storage Account names should meet naming requirements." name="sademopsrulerawdev -- Azure.Storage.Name" time="0" asserts="0" success="True" result="Success" executed="True" /><test-case description="Enable container soft delete on Storage Accounts." name="sademopsrulerawdev -- Azure.Storage.ContainerSoftDelete" time="0,001" asserts="0" success="False" result="Failure" executed="True"><failure><message><![CDATA[Consider enabling container soft delete on storage accounts to protect blob containers from accidental deletion or modification.

The following reasons were reported:

- A sub-resource of type 'Microsoft.Storage/storageAccounts/blobServices' has not been specified.
]]></message><stack-trace><![CDATA[]]></stack-trace></failure></test-case><test-case description="Enable Malware Scanning in Microsoft Defender for Storage." name="sademopsrulerawdev -- Azure.Storage.Defender.MalwareScan" time="0,001" asserts="0" success="True" result="Success" executed="True" /><test-case description="Storage Accounts should only accept explicitly allowed traffic." name="sademopsrulerawdev -- Azure.Storage.Firewall" time="0" asserts="0" success="False" result="Failure" executed="True"><failure><message><![CDATA[Consider configuring storage firewall to restrict network access to permitted clients only. Also consider enforcing this setting using Azure Policy.

The following reasons were reported:

- Path properties.networkAcls.defaultAction: The field 'properties.networkAcls.defaultAction' does not exist.
]]></message><stack-trace><![CDATA[]]></stack-trace></failure></test-case><test-case description="Storage Accounts should not accept weak or deprecated transport protocols for client-server communication." name="sademopsrulerawdev -- Azure.Storage.MinTLS" time="0" asserts="0" success="False" result="Failure" executed="True"><failure><message><![CDATA[Consider configuring the minimum supported TLS version to be 1.2. Also consider enforcing this setting using Azure Policy.

The following reasons were reported:

- Path properties.minimumTlsVersion: The field 'properties.minimumTlsVersion' does not exist.
]]></message><stack-trace><![CDATA[]]></stack-trace></failure></test-case><test-case description="Storage accounts should only accept encrypted connections." name="sademopsrulerawdev -- Azure.Storage.SecureTransfer" time="0" asserts="0" success="True" result="Success" executed="True" /></results></test-suite></test-results>